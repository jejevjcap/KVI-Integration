{
  "swagger": "2.0",
  "info": {
    "title": "KVI API",
    "version": "3.0.1",
    "description": "API documentation for Korlantas Vehicle Identification"
  },
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with username and password",
        "tags": ["Authentication"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to register",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "testuser"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Username already exists or missing fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Authenticate a user",
        "description": "Authenticates a user using username and password",
        "tags": ["Authentication"],
        "parameters": [
          {
            "in": "body",
            "name": "auth",
            "description": "Authentication data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "testuser"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "your_generated_access_token"
                },
                "token_type": {
                  "type": "string",
                  "example": "bearer"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication successful"
                }
              }
            }
          },
          "ERR991": {
            "description": "Invalid username or password",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "ERR991"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid username or password"
                },
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "path": {
                  "type": "string",
                  "example": "/auth"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                },
                "uuid": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          },
          "ERR998": {
            "description": "Missing fields in request body or password not provided",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "ERR998"
                },
                "message": {
                  "type": "string",
                  "example": "Password must not be nulled"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "path": {
                  "type": "string",
                  "example": "/auth"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                },
                "uuid": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          },
          "ERR995": {
            "description": "Required Request Body is Missing or Empty",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "ERR995"
                },
                "message": {
                  "type": "string",
                  "example": "Required Request Body is Missing or Empty"
                },
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "path": {
                  "type": "string",
                  "example": "/auth"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                },
                "uuid": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          }
        }
      }
    },
    "/protected": {
      "get": {
        "summary": "Protected route that requires authentication",
        "description": "This route is only accessible by users with a valid JWT token.",
        "tags": ["Get Vehicle Inspection Information"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully accessed protected route",
            "schema": {
              "type": "object",
              "properties": {
                "logged_in_as": {
                  "type": "string",
                  "example": "testuser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token"
          }
        }
      }
    },
    "/regNo/{regNo}": {
      "get": {
        "summary": "Get inspection details by registration number",
        "description": "Fetches inspection details for the given registration number (regNo). Requires authentication.",
        "tags": ["Get Vehicle Inspection Information"],
        "parameters": [
          {
            "name": "regNo",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The registration number of the vehicle"
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection details found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 1
                },
                "inspection_id": {
                  "type": "integer",
                  "example": 123
                },
                "trx_id": {
                  "type": "string",
                  "example": "TRX001"
                },
                "reg_no": {
                  "type": "string",
                  "example": "ABC123"
                },
                "remark_reg_no": {
                  "type": "string",
                  "example": "No issues"
                },
                "engine_no": {
                  "type": "string",
                  "example": "ENG12345"
                },
                "remark_engine_no": {
                  "type": "string",
                  "example": "Running well"
                },
                "chassis_no": {
                  "type": "string",
                  "example": "CHAS12345"
                },
                "remark_chassis_no": {
                  "type": "string",
                  "example": "Minor scratches"
                },
                "front_fid": {
                  "type": "string",
                  "example": "front_image_url"
                },
                "back_fid": {
                  "type": "string",
                  "example": "back_image_url"
                },
                "engine_no_fid": {
                  "type": "string",
                  "example": "engine_image_url"
                },
                "chassis_no_fid": {
                  "type": "string",
                  "example": "chassis_image_url"
                },
                "officer": {
                  "type": "string",
                  "example": "OfficerName1"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given registration number",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 99
                },
                "error_message": {
                  "type": "string",
                  "example": "No Data"
                }
              }
            }
          },
          "422": {
            "description": "Unauthorized access",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "ERR992"
                },
                "message": {
                  "type": "string",
                  "example": "Forbidden Access"
                },
                "status": {
                  "type": "integer",
                  "example": 422
                },
                "path": {
                  "type": "string",
                  "example": "/regNo/ABC123"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                },
                "uuid": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/images/regNo/{regNo}": {
      "get": {
        "summary": "Get inspection images by registration number",
        "description": "Fetches base64-encoded images for the given registration number (regNo). Requires authentication.",
        "tags": ["Get Vehicle Inspection Information"],
        "parameters": [
          {
            "name": "regNo",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The registration number of the vehicle"
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection images found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 1
                },
                "inspection_id": {
                  "type": "integer",
                  "example": 72
                },
                "trx_id": {
                  "type": "string",
                  "example": "INT-X001_1705548803883"
                },
                "front": {
                  "type": "string",
                  "example": "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AI..."
                },
                "back": {
                  "type": "string",
                  "example": "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AI..."
                },
                "engine_no": {
                  "type": "string",
                  "example": "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AI..."
                },
                "chassis_no": {
                  "type": "string",
                  "example": "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AI..."
                },
                "reg_no": {
                  "type": "string",
                  "example": "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AI..."
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given registration number",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 99
                },
                "error_message": {
                  "type": "string",
                  "example": "No Data"
                }
              }
            }
          },
          "422": {
            "description": "Unauthorized access",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "ERR992"
                },
                "message": {
                  "type": "string",
                  "example": "Forbidden Access"
                },
                "status": {
                  "type": "integer",
                  "example": 422
                },
                "path": {
                  "type": "string",
                  "example": "/regNo/ABC123"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2025-02-25T12:34:56+07:00"
                },
                "uuid": {
                  "type": "string",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Bearer token authentication. Example: 'Authorization: Bearer <your_access_token>'"
    }
  },

  "security": [
    {
      "bearerAuth": []
    }
  ]
}
